{"version":3,"sources":["img/tfotpe.png","img/rps.png","img/playlist.png","img/giffinder.png","img/mvpproject.png","img/toastermaze.png","img/goodolmemos.png","components/Navbar.jsx","components/About.jsx","components/Gallery.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","Component","About","class","href","Gallery","pageURL","imgURL","tfotpe","caption","codeURL","rps","playlist","giffinder","mvpproject","toastermaze","goodolmemos","GalleryItem","this","props","src","alt","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,4LCE9BC,EAAb,uKAEI,OACE,yBAAKC,UAAU,gCACb,0BAAMA,UAAU,gBAAhB,yBAGA,0BAAMA,UAAU,cAAhB,4BAPR,GAA4BC,aCAfC,EAAb,uKAEI,OACE,yBAAKF,UAAU,OACb,yBAAKA,UAAU,YACb,yCACA,iPAIA,4IAIF,yBAAKA,UAAU,YACb,oDACA,wBAAIG,MAAM,+BACR,wBAAIA,MAAM,mBAAV,iCACA,wBAAIA,MAAM,mBAAV,4BACA,wBAAIA,MAAM,mBAAkB,uBAAGC,KAAK,0CAAR,oBAnBxC,GAA2BH,a,oHCQdI,EAAb,uKAEI,OACE,6BAEE,yBAAKL,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,EAAD,CACEM,QAAQ,wBACRC,OAAQC,IACRC,QAAQ,iCACRC,QAAQ,2BAGZ,yBAAKV,UAAU,YACb,kBAAC,EAAD,CACEM,QAAQ,wBACRC,OAAQI,IACRF,QAAQ,sBACRC,QAAQ,4BAKd,yBAAKV,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,EAAD,CACEM,QAAQ,wBACRC,OAAQK,IACRH,QAAQ,WACRC,QAAQ,2BAGZ,yBAAKV,UAAU,YACb,kBAAC,EAAD,CACEM,QAAQ,wBACRC,OAAQM,IACRJ,QAAQ,aACRC,QAAQ,4BAKd,yBAAKV,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,EAAD,CACEM,QAAQ,wBACRC,OAAQO,IACRL,QAAQ,cACRC,QAAQ,2BAGZ,yBAAKV,UAAU,YACb,kBAAC,EAAD,CACEM,QAAQ,gCACRC,OAAQQ,IACRN,QAAQ,eACRC,QAAQ,4BAKd,yBAAKV,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,EAAD,CACEM,QAAQ,6CACRC,OAAQS,IACRP,QAAQ,iBACRC,QAAQ,sDApEtB,GAA6BT,aA6EvBgB,E,uKACM,IAAD,EACuCC,KAAKC,MAA3CZ,EADD,EACCA,OAAQE,EADT,EACSA,QAASC,EADlB,EACkBA,QAASJ,EAD3B,EAC2BA,QAClC,OACE,6BACE,uBAAGF,KAAME,GACP,yBACEN,UAAU,gBACVoB,IAAKb,EACLc,IAAKZ,KAGT,6BACA,yBAAKN,MAAM,WACT,4BAAKM,GACL,2BAAG,uBAAGL,KAAMM,GAAT,UAEL,kC,GAjBkBT,aC/EbqB,G,MAAb,uKAEI,OACE,6BACE,kBAAC,EAAD,MACA,6BACA,yBAAKtB,UAAU,aACb,kBAAC,EAAD,MACA,4CAGA,kBAAC,EAAD,YAXV,GAAyBC,cCILsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,SDyH1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.997c49f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tfotpe.41cb5ba9.png\";","module.exports = __webpack_public_path__ + \"static/media/rps.b13bca3a.png\";","module.exports = __webpack_public_path__ + \"static/media/playlist.4ca1a22f.png\";","module.exports = __webpack_public_path__ + \"static/media/giffinder.aafc810c.png\";","module.exports = __webpack_public_path__ + \"static/media/mvpproject.b59d4aa3.png\";","module.exports = __webpack_public_path__ + \"static/media/toastermaze.5a5d5b0c.png\";","module.exports = __webpack_public_path__ + \"static/media/goodolmemos.80c40b25.png\";","import React, { Component } from 'react';\r\n\r\nexport class Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-light bg-light\">\r\n        <span className=\"navbar-brand\">\r\n          Wei Wu Lu's Portfolio\r\n        </span>\r\n        <span className='text-right'>\r\n          powered by React.js\r\n        </span>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\n\r\nexport class About extends Component {\r\n  render() {\r\n    return (\r\n      <div className='row'>\r\n        <div className='col-md-8'>\r\n          <h1>About Me:</h1>\r\n          <p>\r\n            Hello, my name is Wei Wu Lu. I am currently a freshman at University of California - Davis and planning to major\r\n            in Mathematics. Soon I will be submitting a petition to double major along with Computer Science.\r\n          </p>\r\n          <p>\r\n            My favorite hobbies include playing videogames, playing board games and watching S.T.E.M. videos on YouTube.\r\n          </p>\r\n        </div>\r\n        <div className='col-md-4'>\r\n          <h4>Contact Information:</h4>\r\n          <ul class=\"list-group list-group-flush\">\r\n            <li class=\"list-group-item\">E-mail: weiwulu2001@gmail.com</li>\r\n            <li class=\"list-group-item\">Phone: +1 (415) 987-2324</li>\r\n            <li class=\"list-group-item\"><a href='https://www.linkedin.com/in/wei-wu-lu/'>LinkedIn</a></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\n\r\nimport tfotpe from '../img/tfotpe.png';\r\nimport rps from '../img/rps.png';\r\nimport playlist from '../img/playlist.png';\r\nimport giffinder from '../img/giffinder.png';\r\nimport mvpproject from '../img/mvpproject.png';\r\nimport toastermaze from '../img/toastermaze.png';\r\nimport goodolmemos from '../img/goodolmemos.png';\r\n\r\nexport class Gallery extends Component {\r\n  render() {\r\n    return(\r\n      <div>\r\n        {/*First Gallery Row*/}\r\n        <div className='row'>\r\n          <div className='col-md-6'>\r\n            <GalleryItem \r\n              pageURL='https://goo.gl/vJVM8x'\r\n              imgURL={tfotpe}\r\n              caption='The Future of The Planet Earth'\r\n              codeURL='https://goo.gl/f7yAi3'\r\n            />\r\n          </div>\r\n          <div className='col-md-6'>\r\n            <GalleryItem \r\n              pageURL='https://goo.gl/78gHWS'\r\n              imgURL={rps}\r\n              caption='Rock Paper Scissors'\r\n              codeURL='https://goo.gl/4bmSf2'\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* Second Gallery Row */}\r\n        <div className='row'>\r\n          <div className='col-md-6'>\r\n            <GalleryItem \r\n              pageURL='https://goo.gl/XrxPvw'\r\n              imgURL={playlist}\r\n              caption='Playlist'\r\n              codeURL='https://goo.gl/L4SA84'\r\n            />\r\n          </div>\r\n          <div className='col-md-6'>\r\n            <GalleryItem \r\n              pageURL='https://goo.gl/7HY8Js'\r\n              imgURL={giffinder}\r\n              caption='Gif Finder'\r\n              codeURL='https://goo.gl/JCK3iq'\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* Third Gallery Row */}\r\n        <div className='row'>\r\n          <div className='col-md-6'>\r\n            <GalleryItem \r\n              pageURL='https://goo.gl/ifLvhj'\r\n              imgURL={mvpproject}\r\n              caption='Library App'\r\n              codeURL='https://goo.gl/o1sQw8'\r\n            />\r\n          </div>\r\n          <div className='col-md-6'>\r\n            <GalleryItem \r\n              pageURL='https://team-toast.glitch.me/'\r\n              imgURL={toastermaze}\r\n              caption='Toaster Maze'\r\n              codeURL='https://goo.gl/58Y1di'\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* Fourth Gallery Row */}\r\n        <div className='row'>\r\n          <div className='col-md-6'>\r\n            <GalleryItem \r\n              pageURL='https://lfchrome.github.io/good_ol-_memos/'\r\n              imgURL={goodolmemos}\r\n              caption=\"Good Ol' Memos\"\r\n              codeURL='https://github.com/LFChrome/good_ol-_memos'\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass GalleryItem extends Component {\r\n  render() {\r\n    const { imgURL, caption, codeURL, pageURL } = this.props;\r\n    return(\r\n      <div>\r\n        <a href={pageURL}>\r\n          <img \r\n            className='img-thumbnail'\r\n            src={imgURL}\r\n            alt={caption}\r\n          />\r\n        </a>\r\n        <hr />\r\n        <div class='caption'>\r\n          <h3>{caption}</h3>\r\n          <p><a href={codeURL}>CODE</a></p>\r\n        </div>\r\n        <hr />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component }  from 'react';\n\nimport { Navbar } from './Navbar';\nimport { About } from './About';\nimport { Gallery } from './Gallery'; \n\nimport '../App.css';\n\nexport class App extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar/>\n        <hr/>\n        <div className='container'>\n          <About />\n          <h1>\n            My Projects:\n          </h1>\n          <Gallery />\n        </div>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nimport { App } from './components/App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}